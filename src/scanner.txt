import os
import sys
import socket

from datetime import datetime
from threading import Thread
from time import sleep

from .utils.thread import ThreadWithCallback


class Scanner:
    def __init__(self, *args, **kwargs):
        self.hostlist = kwargs.pop("hostlist")
        self.portlist = sorted(kwargs.pop("portlist"))
        self.portlist_len = len(self.portlist)
        # deilum threadunum á hostana
        self.thread_count = int(kwargs.pop("max_thread_count"))

    def portscan(self, hostname, port):
        serverIP = socket.gethostbyname(hostname)
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)

        try:
            c = sock.connect((serverIP, port))
            print(f"Port {port} is open")
            c.close()
        except:
            pass

    def scan_host(self, hostname, counter=0):
        counter_base = counter
        for _ in range(self.thread_count):
            if (
                counter < self.portlist_len - 1
            ):  # runna þangað til að búið að skanna öll port
                # print(counter)
                if counter < counter_base + self.thread_count - 1:
                    thread = Thread(
                        target=self.portscan,
                        kwargs={"hostname": hostname, "port": self.portlist[counter]},
                    )
                elif (
                    counter == counter_base + self.thread_count - 1
                ):  # síðasti threadinn í þessu batchi
                    # notum callback til að láta threadinn kalla á næsta portbatch
                    thread = ThreadWithCallback(
                        target=self.portscan,
                        kwargs={"hostname": hostname, "port": self.portlist[counter]},
                        callback=self.scan_host_callback,
                        # gefum callback-inu upplýsingar um hvaða port í portlistanum á að taka næst
                        callback_kwargs={"hostname": hostname, "counter": counter},
                    )

                counter += 1
                thread.start()

    def scan_host_callback(self, *args, **kwargs):
        hostname = kwargs.pop("hostname")
        counter = kwargs.pop("counter")
        self.scan_host(hostname, counter + 1)

    def scan_all_hosts(self):
        t1 = datetime.now()
        for host in self.hostlist:
            print(f"Scanning host: {host}")
            thread = Thread(target=self.scan_host, kwargs={"hostname": host})
            thread.start()
            thread.join()
            # self.scan_host(host)
        print(f"time: {datetime.now() - t1}")

